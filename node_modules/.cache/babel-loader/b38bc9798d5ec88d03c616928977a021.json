{"ast":null,"code":"var _jsxFileName = \"/Users/javier/Documents/BudgetApp/budgetapp/frontend/src/Components/Cards/MoneyCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Card, ProgressBar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoneyCard = _ref => {\n  let {\n    amount,\n    title,\n    saved\n  } = _ref;\n  const completed = saved * 100 / amount;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"rounded-5 my-2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"mx-2\",\n        children: saved ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-success\",\n                children: [\"$\", saved]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" / $ \", amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              variant: \"success\",\n              now: completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: amount > 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"$\", amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-danger\",\n              children: [\"$\", amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MoneyCard;\nexport default MoneyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoneyCard\");","map":{"version":3,"sources":["/Users/javier/Documents/BudgetApp/budgetapp/frontend/src/Components/Cards/MoneyCard.js"],"names":["React","useEffect","Card","ProgressBar","MoneyCard","amount","title","saved","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;;;AAEA,MAAMC,SAAS,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAA6B;AAC9C,QAAMC,SAAS,GAAID,KAAK,GAAG,GAAT,GAAgBF,MAAlC;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,kBACGE,KAAK,gBACJ;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA,oCACE;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,gCAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,oCAAYF,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAC,SAArB;AAA+B,cAAA,GAAG,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,gBAaJ;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYF;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGD,MAAM,GAAG,CAAT,gBACC;AAAA,8BAAMA,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,8BAA8BA,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAlCD;;KAAMD,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Card, ProgressBar } from \"react-bootstrap\";\n\nconst MoneyCard = ({ amount, title, saved }) => {\n  const completed = (saved * 100) / amount;\n  return (\n    <div>\n      <Card className=\"rounded-5 my-2\">\n        <Card.Body className=\"mx-2\">\n          {saved ? (\n            <div>\n              <Card.Text>{title}</Card.Text>\n\n              <div>\n                <h4>\n                  <span className=\"text-success\">${saved}</span>\n                  <span> / $ {amount}</span>\n                </h4>\n                <ProgressBar variant=\"success\" now={completed} />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <Card.Text>{title}</Card.Text>\n              <div>\n                {amount > 0 ? (\n                  <h4>${amount}</h4>\n                ) : (\n                  <h4 className=\"text-danger\">${amount}</h4>\n                )}\n              </div>\n            </div>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default MoneyCard;\n"]},"metadata":{},"sourceType":"module"}
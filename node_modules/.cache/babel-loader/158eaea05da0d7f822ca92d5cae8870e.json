{"ast":null,"code":"var _jsxFileName = \"/Users/javier/Documents/BudgetFrontend/frontend/src/Context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const history = useNavigate();\n  let [loading, setLoading] = useState(true);\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch(\"http://127.0.0.1:8000/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: e.target.elements.formBasicName.value,\n        password: e.target.elements.formBasicPassword.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history(\"/\");\n    } else {\n      alert(\"no user found\");\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history(\"/start\");\n  };\n\n  let updateToken = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    let fourMinutes = 100 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"zX0SxbDEqhw4fG7HCoaL8R+7lkE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/javier/Documents/BudgetFrontend/frontend/src/Context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","history","loading","setLoading","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","elements","formBasicName","value","password","formBasicPassword","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const history = useNavigate();\n\n  let [loading, setLoading] = useState(true);\n\n  let [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n\n  let loginUser = async (e) => {\n    e.preventDefault();\n    let response = await fetch(\"http://127.0.0.1:8000/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: e.target.elements.formBasicName.value,\n        password: e.target.elements.formBasicPassword.value,\n      }),\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history(\"/\");\n    } else {\n      alert(\"no user found\");\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history(\"/start\");\n  };\n\n  let updateToken = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        refresh: authTokens?.refresh,\n      }),\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n  };\n\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 100 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}